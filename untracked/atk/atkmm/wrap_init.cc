// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#define GLIBMM_INCLUDED_FROM_WRAP_INIT_CC
#include <glibmm.h>
#include <atkmm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#include "action.h"
#include "component.h"
#include "document.h"
#include "editabletext.h"
#include "hyperlink.h"
#include "hypertext.h"
#include "image.h"
#include "implementor.h"
#include "noopobject.h"
#include "object.h"
#include "objectaccessible.h"
#include "range.h"
#include "relation.h"
#include "relationset.h"
#include "selection.h"
#include "stateset.h"
#include "streamablecontent.h"
#include "table.h"
#include "text.h"
#include "value.h"

extern "C"
{
//Declarations of the *_get_type() functions:

GType atk_hyperlink_get_type(void);
GType atk_no_op_object_get_type(void);
GType atk_object_get_type(void);
GType atk_gobject_accessible_get_type(void);
GType atk_relation_get_type(void);
GType atk_relation_set_get_type(void);
GType atk_state_set_get_type(void);

//Declarations of the *_error_quark() functions:

} // extern "C"

namespace Atk {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

class Hyperlink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class NoOpObject_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Object_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ObjectAccessible_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Relation_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RelationSet_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class StateSet_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };

void wrap_init()
{
  // Register Error domains in the main namespace:

  // Map gtypes to gtkmm wrapper-creation functions:
  Glib::wrap_register(atk_hyperlink_get_type(), &Hyperlink_Class::wrap_new);
  Glib::wrap_register(atk_no_op_object_get_type(), &NoOpObject_Class::wrap_new);
  Glib::wrap_register(atk_object_get_type(), &Object_Class::wrap_new);
  Glib::wrap_register(atk_gobject_accessible_get_type(), &ObjectAccessible_Class::wrap_new);
  Glib::wrap_register(atk_relation_get_type(), &Relation_Class::wrap_new);
  Glib::wrap_register(atk_relation_set_get_type(), &RelationSet_Class::wrap_new);
  Glib::wrap_register(atk_state_set_get_type(), &StateSet_Class::wrap_new);

  // Register the gtkmm gtypes:
  g_type_ensure(Hyperlink::get_type());
  g_type_ensure(NoOpObject::get_type());
  g_type_ensure(Object::get_type());
  g_type_ensure(ObjectAccessible::get_type());
  g_type_ensure(Relation::get_type());
  g_type_ensure(RelationSet::get_type());
  g_type_ensure(StateSet::get_type());

} // wrap_init()

} // Atk

